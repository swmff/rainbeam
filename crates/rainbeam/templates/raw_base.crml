@<!doctype html>

- let config = &self.config
- let lang = &self.lang
- let profile = self.profile
- let head = self.head

%html[lang="en"][prefix="og: https://ogp.me/ns#"]
    %head
        %r:
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />

            <meta
                http-equiv="content-security-policy"
                content="default-src 'self' blob:; img-src * data:; media-src *; font-src *; style-src 'unsafe-inline' 'self' blob: *; script-src 'self' 'unsafe-inline' blob: *; object-src 'self' blob: *; upgrade-insecure-requests; connect-src * localhost; frame-src 'self' blob: data: *"
            />

            = {head}

            <link rel="icon" href="/static/favicon.svg" />
            <link rel="manifest" href="/manifest.json" />

            <meta name="theme-color" content="#b62f5a" />
            <meta name="description" content="{{ config.description }}" />
            <meta property="og:type" content="website" />
            <meta property="og:site_name" content="{{ config.name }}" />

            <meta name="turbo-prefetch" content="false" />
            <meta name="turbo-refresh-method" content="morph" />
            <meta name="turbo-refresh-scroll" content="preserve" />

            <link
                rel="stylesheet"
                href="/static/build/css/style.css"
                id="style.css"
                data-turbo-permanent="true"
            />
        %-r:

        %script[src="https://js.hcaptcha.com/1/api.js"][async][defer]'
        %script[src="https://unpkg.com/@hotwired/turbo@8.0.5/dist/turbo.es2017-esm.js"][type="module"][async][defer]'

        %script
            globalThis.ns_verbose = false;
            globalThis.ns_config = {
                root: "/static/build/js/",
                version: '{{ var "commit" }}',
                verbose: globalThis.ns_verbose,
            };

            globalThis._app_base = {
                name: "rainbeam",
                config: {
                    name: "{{ config.name }}",
                    description: `{{ config.description }}`,
                    host: "{{ config.host }}",
                },
                build: {
                    time: '{{ var "time" }}',
                    commit: '{{ var "commit" }}',
                    commit_short: '{{ var "commit_short" }}',
                },
                ns_store: {},
                classes: {},
            };

            globalThis.no_policy = false;
        %-script

        %script#loader_js[data-turbo-permanent][src="/static/build/js/loader.js"]'
        %script#app_js[data-turbo-permanent][src="/static/build/js/app.js"]'

        %script
            function media_theme_pref() {
                document.documentElement.removeAttribute("class");

                if (
                    window.matchMedia("(prefers-color-scheme: dark)").matches &&
                    !window.localStorage.getItem("theme")
                ) {
                    document.documentElement.classList.add("dark");
                } else if (
                    window.matchMedia("(prefers-color-scheme: light)")
                        .matches &&
                    !window.localStorage.getItem("theme")
                ) {
                    document.documentElement.classList.remove("dark");
                } else if (window.localStorage.getItem("theme")) {
                    const current = window.localStorage.getItem("theme");
                    document.documentElement.className = current;
                }
            }

            media_theme_pref();
            document.documentElement.addEventListener("turbo:load", () => {
                if (!document.getElementById("theme")) {
                    return;
                }

                const profile_theme = document
                    .getElementById("theme")
                    .innerText.trim();

                if (profile_theme) {
                    return;
                }

                media_theme_pref();
            });
        %-script
    %-head

    %body
        %div#top'

        - if let Some(ref user) = profile {
            - if user.group == -1 {
                %div.markdown-alert-caution.flex.flex-collapse.items-center.justify-center.gap-4[style="border-radius: 0 !important; margin-bottom: 0 !important"]
                    {{ icon "shield-ban" }}
                    %span
                        {{ text "base.html:text.account_banned" }}
                %-div

                %style
                    body {
                        overflow: hidden;
                    }

                    #page {
                        opacity: 50%;
                        pointer-events: none;
                        user-select: none;
                    }
                %-style
            - }
        - }

        %slot[name="content"]

        %script[data-turbo-eval="false"]
            use("dialogs", () => {});
            use("warnings", () => {});
            use("search", () => {});

            use("questions", () => {});
            use("responses", () => {});
            use("comments", () => {});
            use("reactions", () => {});
            use("chats", () => {});
            use("mail", () => {});
            use("items", () => {});

            use("notifications", () => {});

            use("reports", () => {});
            use("account_warnings", () => {});
            use("tokens", () => {});

            require("PartialComponent", () => {});
        %-script

        %script[data-turbo-permanent="true"]#init-script
            document.documentElement.addEventListener("turbo:load", () => {
                if (
                    window.CHAT_ID &&
                    window.location.pathname !== `/chats/${window.CHAT_ID}`
                ) {
                    console.log("page blocked by chat");
                    window.location.reload();
                }

                const app = ns("app");
                app.disconnect_observers();
                app.clean_date_codes();
                app.link_filter();

                setTimeout(() => {
                    app.PREVIOUSLY_EXISTED = true;

                    if (
                        !window.location.pathname.startsWith("@") &&
                        !window.location.pathname.startsWith("+")
                    ) {
                        if (
                            globalThis.USES_DIFF_THEME === true &&
                            globalThis.IS_SELF_THEME === false
                        ) {
                            media_theme_pref();
                            console.log("use media theme pref");
                        }
                    }
                }, 1000);

                app["hook.scroll"](document.body, document.documentElement);
                app["hook.dropdown.init"](window);
                app["hook.character_counter.init"]();
                app["hook.long_text.init"]();
                app["hook.alt"]();
                app["hook.ips"]();
                app["hook.check_reactions"]();
                app["hook.tabs"]();
                app["hook.partial_embeds"]();
            });
        %-script

        %dialog#link_filter
            %div.inner
                %r:
                    <p>Pressing continue will bring you to the following URL:</p>
                    <pre><code id="link_filter_url"></code></pre>
                    <p>Are sure you want to go there?</p>

                    <hr />
                    <div class="flex gap-2">
                        <a
                            class="button primary bold"
                            id="link_filter_continue"
                            rel="noopener noreferrer"
                            target="_blank"
                            onclick="document.getElementById('link_filter').close()"
                        >
                            {{ text "general:dialog.continue" }}
                        </a>
                        <button
                            class="bold"
                            type="button"
                            onclick="document.getElementById('link_filter').close()"
                        >
                            {{ text "general:dialog.cancel" }}
                        </button>
                    </div>
                %-r:
            %end
        %-dialog

        %dialog#web_api_prompt
            %div.inner.flex.flex-col.gap-2
                %form.flex.flex-col.gap-2[onsubmit="event.preventDefault()"]
                    %label[for="prompt"]#web_api_prompt:msg'
                    %textarea#prompt[name="prompt"]'
                    %div.flex.justify-between
                        %div'
                        %div.flex.gap-2
                            %button.primary.bold[onclick="submit_web_api_prompt_dialog()"][type="button"]
                                {{ icon "check" }} {{ text "general:dialog.okay" }}
                            %-button
                            %button.bold.red.camo[onclick="globalThis.web_api_prompt_submit(false)"][type="button"]
                                {{ icon "x" }} {{ text "general:dialog.no" }}
                            %-button
                        %-div
                    %end
                %-form
            %end
        %-dialog

        %script
            function submit_web_api_prompt_dialog() {
                globalThis.web_api_prompt_submit(document.getElementById('prompt').value);
                document.getElementById('prompt').value = '';
            }
        %-script

        %dialog#web_api_prompt_long
            %div.inner.flex.flex-col.gap-2
                %form.flex.flex-col.gap-2[onsubmit="event.preventDefault()"]
                    %label[for="prompt_long"]#web_api_prompt_long:msg'
                    %textarea#prompt_long[name="prompt_long"]'

                    %div.flex.justify-between
                        %div'
                        %div.flex.gap-2
                            %button.primary.bold[onclick="submit_web_api_prompt_long_dialog()"][type="button"]
                                {{ icon "check" }} {{ text "general:dialog.okay" }}
                            %-button
                            %button.bold.red.camo[onclick="globalThis.web_api_prompt_long_submit(false)"][type="button"]
                                {{ icon "x" }} {{ text "general:dialog.no" }}
                            %-button
                        %-div
                    %end
                %-form
            %end
        %-dialog

        %script
            function submit_web_api_prompt_long_dialog() {
                globalThis.web_api_prompt_long_submit(document.getElementById('prompt_long').value);
                document.getElementById('prompt_long').value = '';
            }
        %-script

        %dialog#web_api_confirm
            %div.inner.flex.flex-col.gap-2>
                %form.flex.gap-2.flex-col[onsubmit="event.preventDefault()"]
                    %label#web_api_confirm:msg'
                    %div.flex.justify-between
                        %div'
                        %div.flex.gap-2
                            %button.primary.bold[onclick="globalThis.web_api_confirm_submit(true)"][type="button"]
                                {{ icon "check" }} {{ text "general:dialog.yes" }}
                            %-button
                            %button.bold.red.camo[onclick="globalThis.web_api_confirm_submit(false)"][type="button"]
                                {{ icon "x" }} {{ text "general:dialog.no" }}
                            %-button
                        %-div
                    %end
                %end
            %end
        %-dialog
    %-body
%-html
